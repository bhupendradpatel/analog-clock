{"version":3,"sources":["App.utils.js","App.js","reportWebVitals.js","index.js"],"names":["degree","App","hour","useRef","minute","second","useEffect","test","setInterval","date","Date","hh","getHours","mm","getMinutes","ss","getSeconds","current","style","transform","concat","clearInterval","React","createElement","className","Array","fill","map","_","index","rotate","ref","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8KAAaA,SAAS,SCkDPC,MA9Cf,WACE,IAAMC,EAAOC,iBAAO,MACdC,EAASD,iBAAO,MAChBE,EAASF,iBAAO,MAkBtB,OAhBAG,oBAAU,WACR,IAAMC,EAAOC,YAAY,WACvB,IAAMC,EAAO,IAAIC,KACXC,EAAuB,GAAlBF,EAAKG,WACVC,EAAKJ,EAAKK,aAAed,EACzBe,EAAKN,EAAKO,aAAehB,EAE/BE,EAAKe,QAAQC,MAAMC,UAAS,UAAAC,OAAaT,EAAME,EAAK,GAAG,QACvDT,EAAOa,QAAQC,MAAMC,UAAS,UAAAC,OAAaP,EAAE,QAC7CR,EAAOY,QAAQC,MAAMC,UAAS,UAAAC,OAAaL,EAAE,SAC5C,KAEH,OAAO,kBAAMM,cAAcd,KAC1B,IAIDe,IAAAC,cAAA,OAAKC,UAAW,OACdF,IAAAC,cAAA,OAAKC,UAAW,aACdF,IAAAC,cAAA,OAAKC,UAAW,WAChBF,IAAAC,cAAA,OAAKC,UAAW,WAEhBF,IAAAC,cAAA,OAAKC,UAAW,SACb,IAAIC,MAAM,IAAIC,KAAK,IAAIC,IAAI,SAACC,EAAGC,GAC9B,IAAMC,EAAM,UAAAV,OAA6B,GAAdS,EAAQ,GAAO,QAC1C,OAAQP,IAAAC,cAAA,OAAKC,UAAW,cAAeN,MAAO,CAACC,UAAWW,IACxDR,IAAAC,cAAA,OAAKC,UAAW,aAIpBF,IAAAC,cAAA,OAAKC,UAAW,aACdF,IAAAC,cAAA,OAAKQ,IAAK7B,EAAMsB,UAAW,cAC3BF,IAAAC,cAAA,OAAKQ,IAAK3B,EAAQoB,UAAW,gBAC7BF,IAAAC,cAAA,OAAKQ,IAAK1B,EAAQmB,UAAW,qBC9B1BQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3B,IAAAC,cAACD,IAAM4B,WAAU,KACf5B,IAAAC,cAACtB,EAAG,QAOR+B","file":"static/js/main.930bdd13.chunk.js","sourcesContent":["export const degree = 6;\n","import React, {useEffect, useRef} from 'react';\nimport {degree} from './App.utils';\nimport './App.css';\n\nfunction App() {\n  const hour = useRef(null);\n  const minute = useRef(null);\n  const second = useRef(null);\n\n  useEffect(() => {\n    const test = setInterval(() => {\n      const date = new Date();\n      const hh = date.getHours() * 30;\n      const mm = date.getMinutes() * degree;\n      const ss = date.getSeconds() * degree;\n\n      hour.current.style.transform = `rotate(${hh + (mm / 12)}deg)`;\n      minute.current.style.transform = `rotate(${mm}deg)`;\n      second.current.style.transform = `rotate(${ss}deg)`;\n    }, 1000);\n\n    return () => clearInterval(test);\n  }, []);\n\n\n  return (\n    <div className={'App'}>\n      <div className={'container'}>\n        <div className={'circle'}></div>\n        <div className={'circle'}></div>\n\n        <div className={'clock'}>\n          {new Array(60).fill('').map((_, index) => {\n            const rotate = `rotate(${( index + 1)  * 6}deg)`;\n            return (<div className={'graduations'} style={{transform: rotate}}>\n              <div className={'stick'}></div>\n            </div>)\n          })}\n\n          <div className={'indicator'}>\n            <div ref={hour} className={'hand hour'}></div>\n            <div ref={minute} className={'hand minute'}></div>\n            <div ref={second} className={'hand second'}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}