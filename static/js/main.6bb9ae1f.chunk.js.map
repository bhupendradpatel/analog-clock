{"version":3,"sources":["App.utils.js","App.js","reportWebVitals.js","index.js"],"names":["setTimeForClock","hour","minute","second","date","Date","hh","getHours","mm","getMinutes","ss","getSeconds","current","style","transform","concat","App","useRef","useEffect","test","setInterval","clearInterval","React","createElement","className","Array","fill","map","_","index","rotate","ref","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8KAEaA,SAAkB,SAACC,EAAMC,EAAQC,GAC1C,IAAMC,EAAO,IAAIC,KACXC,EAAuB,GAAlBF,EAAKG,WACVC,EALY,EAKPJ,EAAKK,aACVC,EANY,EAMPN,EAAKO,cAEZV,EAAKW,SAAWV,EAAOU,SAAWT,EAAOS,WACzCX,EAAKW,QAAQC,MAAMC,UAAS,UAAAC,OAAaT,EAAME,EAAK,GAAG,QACvDN,EAAOU,QAAQC,MAAMC,UAAS,UAAAC,OAAaP,EAAE,QAC7CL,EAAOS,QAAQC,MAAMC,UAAS,UAAAC,OAAaL,EAAE,iBCgCtCM,MAvCf,WACC,IAAMf,EAAOgB,iBAAO,MACdf,EAASe,iBAAO,MAChBd,EAASc,iBAAO,MAWtB,OATAC,oBAAU,WACTlB,EAAgBC,EAAMC,EAAQC,GAE9B,IAAMgB,EAAOC,YAAY,kBAAMpB,EAAgBC,EAAMC,EAAQC,IAAS,KAEtE,OAAO,kBAAMkB,cAAcF,KACzB,IAIFG,IAAAC,cAAA,OAAKC,UAAW,OACfF,IAAAC,cAAA,OAAKC,UAAW,aAAa,IAC5BF,IAAAC,cAAA,OAAKC,UAAW,WAChBF,IAAAC,cAAA,OAAKC,UAAW,WAEhBF,IAAAC,cAAA,OAAKC,UAAW,SACd,IAAIC,MAAM,IAAIC,KAAK,IAAIC,IAAI,SAACC,EAAGC,GAC/B,IAAMC,EAAM,UAAAf,OAA6B,GAAdc,EAAQ,GAAO,QAC1C,OAAQP,IAAAC,cAAA,OAAKC,UAAW,cAAeX,MAAO,CAACC,UAAWgB,IACzDR,IAAAC,cAAA,OAAKC,UAAW,aAIlBF,IAAAC,cAAA,OAAKC,UAAW,aACfF,IAAAC,cAAA,OAAKQ,IAAK9B,EAAMuB,UAAW,cAC3BF,IAAAC,cAAA,OAAKQ,IAAK7B,EAAQsB,UAAW,gBAC7BF,IAAAC,cAAA,OAAKQ,IAAK5B,EAAQqB,UAAW,qBCvBpBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3B,IAAAC,cAACD,IAAM4B,WAAU,KACf5B,IAAAC,cAACP,EAAG,QAORgB","file":"static/js/main.6bb9ae1f.chunk.js","sourcesContent":["export const degree = 6;\n\nexport const setTimeForClock = (hour, minute, second) => {\n    const date = new Date();\n    const hh = date.getHours() * 30;\n    const mm = date.getMinutes() * degree;\n    const ss = date.getSeconds() * degree;\n\n    if (hour.current || minute.current || second.current) {\n        hour.current.style.transform = `rotate(${hh + (mm / 12)}deg)`;\n        minute.current.style.transform = `rotate(${mm}deg)`;\n        second.current.style.transform = `rotate(${ss}deg)`;\n    }\n}\n","import React, {useEffect, useRef} from 'react';\nimport {setTimeForClock} from './App.utils';\nimport './App.css';\n\nfunction App() {\n\tconst hour = useRef(null);\n\tconst minute = useRef(null);\n\tconst second = useRef(null);\n\n\tuseEffect(() => {\n\t\tsetTimeForClock(hour, minute, second);\n\n\t\tconst test = setInterval(() => setTimeForClock(hour, minute, second), 1000);\n\n\t\treturn () => clearInterval(test);\n\t}, []);\n\n\n\treturn (\n\t\t<div className={'App'}>\n\t\t\t<div className={'container'}> {/*  style={{visibility: loaded ? 'visible' : 'hidden'}} */}\n\t\t\t\t<div className={'circle'}></div>\n\t\t\t\t<div className={'circle'}></div>\n\n\t\t\t\t<div className={'clock'}>\n\t\t\t\t\t{new Array(60).fill('').map((_, index) => {\n\t\t\t\t\t\tconst rotate = `rotate(${( index + 1)  * 6}deg)`;\n\t\t\t\t\t\treturn (<div className={'graduations'} style={{transform: rotate}}>\n\t\t\t\t\t\t\t<div className={'stick'}></div>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t})}\n\n\t\t\t\t\t<div className={'indicator'}>\n\t\t\t\t\t\t<div ref={hour} className={'hand hour'}></div>\n\t\t\t\t\t\t<div ref={minute} className={'hand minute'}></div>\n\t\t\t\t\t\t<div ref={second} className={'hand second'}></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}