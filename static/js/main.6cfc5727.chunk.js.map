{"version":3,"sources":["asset/clock-ticking-sound.mp3","App.utils.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","setTimeForClock","hour","minute","second","date","Date","hh","getHours","mm","getMinutes","ss","getSeconds","current","style","transform","concat","App","_useState","useState","_useState2","_slicedToArray","isPlaying","setIsPlaying","useRef","useEffect","test","setInterval","clearInterval","React","createElement","className","Array","fill","map","_","index","rotate","key","ref","autoPlay","src","clockTickSound","type","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wOCE3BC,EAAkB,SAACC,EAAMC,EAAQC,GAC1C,IAAMC,EAAO,IAAIC,KACXC,EAAuB,GAAlBF,EAAKG,WACVC,EALY,EAKPJ,EAAKK,aACVC,EANY,EAMPN,EAAKO,cAEZV,EAAKW,SAAWV,EAAOU,SAAWT,EAAOS,WACzCX,EAAKW,QAAQC,MAAMC,UAAS,UAAAC,OAAaT,EAAME,EAAK,GAAG,QACvDN,EAAOU,QAAQC,MAAMC,UAAS,UAAAC,OAAaP,EAAE,QAC7CL,EAAOS,QAAQC,MAAMC,UAAS,UAAAC,OAAaL,EAAE,gBCuCtCM,MA7Cf,WAAe,IAAAC,EACoBC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBlB,EAAOsB,iBAAO,MACdrB,EAASqB,iBAAO,MAChBpB,EAASoB,iBAAO,MAYtB,OAVAC,oBAAU,WACTxB,EAAgBC,EAAMC,EAAQC,GAE9B,IAAMsB,EAAOC,YAAY,kBAAM1B,EAAgBC,EAAMC,EAAQC,IAAS,KAGtE,OAFAmB,GAAa,GAEN,kBAAMK,cAAcF,KACzB,IAIFG,IAAAC,cAAA,OAAKC,UAAW,OACfF,IAAAC,cAAA,OAAKC,UAAW,aAAa,IAC5BF,IAAAC,cAAA,OAAKC,UAAW,WAChBF,IAAAC,cAAA,OAAKC,UAAW,WAEhBF,IAAAC,cAAA,OAAKC,UAAW,SACd,IAAIC,MAAM,IAAIC,KAAK,IAAIC,IAAI,SAACC,EAAGC,GAC/B,IAAMC,EAAM,UAAArB,OAA6B,GAAdoB,EAAQ,GAAO,QAC1C,OAAQP,IAAAC,cAAA,OAAKQ,IAAKF,EAAOL,UAAW,cAAejB,MAAO,CAACC,UAAWsB,IACrER,IAAAC,cAAA,OAAKC,UAAW,aAIlBF,IAAAC,cAAA,OAAKC,UAAW,aACfF,IAAAC,cAAA,OAAKS,IAAKrC,EAAM6B,UAAW,cAC3BF,IAAAC,cAAA,OAAKS,IAAKpC,EAAQ4B,UAAW,gBAC7BF,IAAAC,cAAA,OAAKS,IAAKnC,EAAQ2B,UAAW,mBAKhCF,IAAAC,cAAA,SAAOU,SAAUlB,EAAWmB,IAAKC,KAChCb,IAAAC,cAAA,UAAQW,IAAKC,IAAgBC,KAAM,kBChCxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC/C,EAAAgD,EAAA,GAAAC,KAAAjD,EAAAkD,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/B,IAAAC,cAACD,IAAMgC,WAAU,KACfhC,IAAAC,cAACb,EAAG,QAOR2B","file":"static/js/main.6cfc5727.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock-ticking-sound.453d2b1c.mp3\";","export const degree = 6;\n\nexport const setTimeForClock = (hour, minute, second) => {\n    const date = new Date();\n    const hh = date.getHours() * 30;\n    const mm = date.getMinutes() * degree;\n    const ss = date.getSeconds() * degree;\n\n    if (hour.current || minute.current || second.current) {\n        hour.current.style.transform = `rotate(${hh + (mm / 12)}deg)`;\n        minute.current.style.transform = `rotate(${mm}deg)`;\n        second.current.style.transform = `rotate(${ss}deg)`;\n    }\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport clockTickSound from './asset/clock-ticking-sound.mp3';\nimport {setTimeForClock} from './App.utils';\nimport './App.css';\n\nfunction App() {\n\tconst [isPlaying, setIsPlaying] = useState(true);\n\tconst hour = useRef(null);\n\tconst minute = useRef(null);\n\tconst second = useRef(null);\n\n\tuseEffect(() => {\n\t\tsetTimeForClock(hour, minute, second);\n\n\t\tconst test = setInterval(() => setTimeForClock(hour, minute, second), 1000);\n\t\tsetIsPlaying(true);\n\n\t\treturn () => clearInterval(test);\n\t}, []);\n\n\n\treturn (\n\t\t<div className={'App'}>\n\t\t\t<div className={'container'}> {/*  style={{visibility: loaded ? 'visible' : 'hidden'}} */}\n\t\t\t\t<div className={'circle'}></div>\n\t\t\t\t<div className={'circle'}></div>\n\n\t\t\t\t<div className={'clock'}>\n\t\t\t\t\t{new Array(60).fill('').map((_, index) => {\n\t\t\t\t\t\tconst rotate = `rotate(${( index + 1)  * 6}deg)`;\n\t\t\t\t\t\treturn (<div key={index} className={'graduations'} style={{transform: rotate}}>\n\t\t\t\t\t\t\t<div className={'stick'}></div>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t})}\n\n\t\t\t\t\t<div className={'indicator'}>\n\t\t\t\t\t\t<div ref={hour} className={'hand hour'}></div>\n\t\t\t\t\t\t<div ref={minute} className={'hand minute'}></div>\n\t\t\t\t\t\t<div ref={second} className={'hand second'}></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<audio autoPlay={isPlaying} src={clockTickSound}>\n\t\t\t\t<source src={clockTickSound} type={'media/mpeg'}></source>\n\t\t\t</audio>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}